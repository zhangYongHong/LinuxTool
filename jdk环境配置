##主要是想记录一下配置环境时的那些配置的意思，每次重装系统的时候，都要配置环境，本来集成环境是为方便编程，而配开发环境
又是一件无聊的事，整理下来，明白为什么需要它。
####这次是window，linux下修改profile文件即可。

一.JDK下载
       自己找吧，然后下载下来

二.下载后安装
     按照提示一步步安装即可，我的安装路径是默认的，安装的时候记下jdk安装路径，因为后面的配置需要填jdk的路径。
     
三.环境配置

     系统：win10
     如果你的是win7,8，配置过程类似。

     【文件资源管理器（我的电脑）—>右击—>属性—>高级系统设置—>环境变量—>系统变量
       —>新建变量】

1. 变量名为:  JAVA_HOME，变量值为:   C:\Program Files (x86)\Java\jdk1.8.0_45
       这里的变量名就是你JDK的安装地址，变量值换成你的jdk地址即可。

作用：   1）为了方便引用，比如，你JDK安装在C:\Program Files (x86)\Java\jdk1.8.0_45目录里，则设置JAVA_HOME为该目录路径,
            那么以后你要使用这个路径的时候, 只需输入%JAVA_HOME%即可, 避免每次引用都输入很长的路径串；

         2）归一原则, 当你JDK路径被迫改变的时候, 你仅需更改JAVA_HOME的变量值即可, 否则,你就要更改任何用绝对路径引用JDK
            目录的文档, 要是万一你没有改全, 某个程序找不到JDK, 后果是可想而知的----系统崩溃!

         3）第三方软件会引用约定好的JAVA_HOME变量, 不然, 你将不能正常使用该软件, 以后用JAVA久了就会知道, 要是某个软件不
            能正常使用, 不妨想想是不是这个问题。




2. 新建CLASSPATH。
       变量名为: CLASSPATH      变量值为:   .;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar

作用：这是一个很有趣,当然也比较折磨初学者的问题, 这个变量设置的目的是为了程序能找到相应的".class"文件, 不妨举个例子: 
      你编译一个JAVA程序---A.java, 会得到一个A.class的类文件,你在当前目录下执行java A, 将会得到相应的结果(前提是你已
      经设置CLASSPATH为"."). 现在, 你把A.class移到别的目录下(例如:"e:\"), 执行java A, 将会有NoClassDefFindError的异
      常,原因就是找不到.class文件, 现在你把CLASSPATH增加为:".;e:\"再运行java A, 看看会有什么结果)，一切正常, java命令
      通过CLASSPATH找到了.class文件!

3.  补充Path。

      变量名为：Path     变量值为：在后面追加  .;%JAVA_HOME%\bin;
      变量值前面有个点，要加上。

作用：道理很简单, 你想在任何时候都使用%JAVA_HOME%\bin\java 等来执行java命令吗, 当然不会, 于是, 你可以选择把
%JAVA_HOME%\bin添加到PATH路径下, 这样, 我们在任何路径下就可以仅用java来执行命令了.(当你在命令提示符窗口输入
一个代码时,操作系统会在当前目录和PATH变量目录里查找相应的应用程序, 并且执行.)

四.测试是否成功

  在cmd中输入 java -version
  如果显示java版本信息，说明你已经安装完成，如果不成功，快去面壁去。












